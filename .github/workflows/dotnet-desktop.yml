name: Build and release browser

on:
  push:
    branches: ["main"]
    tags: ["v*"] # Trigger on version tags
  pull_request:
    branches: ["main"]

jobs:
  build:
    runs-on: windows-latest
    permissions:
      contents: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set version from tag (if building a tag)
        if: startsWith(github.ref, 'refs/tags/v')
        run: echo "APP_VERSION=${GITHUB_REF_NAME#v}" >> $GITHUB_ENV
        shell: bash

      - name: Install .NET Core
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 9.0.x

      # Execute all unit tests in the solution
      #- name: Execute unit tests
      #  run: dotnet test

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22"

      #- name: Cache Angular dependencies
      #  uses: actions/cache@v4
      #  with:
      #    path: ./src/chrome-app/node_modules
      #    key: ${{ runner.os }}-node-${{ hashFiles('./src/chrome-app/package-lock.json') }}
      #    restore-keys: |
      #      ${{ runner.os }}-node-

      - name: Install Angular dependencies
        working-directory: ./src/chrome-app
        run: npm ci

      - name: Build Angular app
        working-directory: ./src/chrome-app
        run: npm run build

      - name: Copy Angular build output to .NET publish folder
        working-directory: ./src/BrowserHost
        shell: pwsh
        run: |
          $chromeAppDist = "..\chrome-app\dist\chrome-app\browser"
          $targetDir = "chrome-app"
          if (Test-Path $targetDir) { Remove-Item $targetDir -Recurse -Force }
          Copy-Item $chromeAppDist $targetDir -Recurse

      - name: Build .NET application (non-release)
        if: ${{ !startsWith(github.ref, 'refs/tags/v') }}
        working-directory: ./src/BrowserHost
        run: dotnet publish BrowserHost.csproj -f net9.0-windows -r win-x64 -p:PublishSingleFile=true --self-contained true -o ../publish

      - name: Build .NET application (release)
        if: startsWith(github.ref, 'refs/tags/v')
        working-directory: ./src/BrowserHost
        run: dotnet publish BrowserHost.csproj -f net9.0-windows -r win-x64 -p:PublishSingleFile=true --self-contained true -o ../publish /p:Version=$Env:APP_VERSION /p:AssemblyVersion=$Env:APP_VERSION

      - name: Create Velopack Release
        if: startsWith(github.ref, 'refs/tags/v')
        run: |
          dotnet tool install -g vpk
          vpk download github --repoUrl https://github.com/${{ github.repository }} --token ${{ secrets.GITHUB_TOKEN }}
          vpk pack -u WithoutPrecedence.Chiaroscuro -v $env:APP_VERSION -p ./src/publish -e Chiaroscuro.exe --packTitle "Chiaroscuro Browser" --packAuthors "Morten Christiansen" --shortcuts StartMenuRoot
          vpk upload github --repoUrl https://github.com/${{ github.repository }} --publish --releaseName "Chiaroscuro v$env:APP_VERSION" --tag $Env:GITHUB_REF_NAME --token ${{ secrets.GITHUB_TOKEN }}