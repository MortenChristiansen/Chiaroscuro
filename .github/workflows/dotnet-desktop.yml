name: .NET Core Desktop

on:
  push:
    branches: ["main"]
    tags: ["v*"] # Trigger on version tags
  pull_request:
    branches: ["main"]

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22"

      #- name: Cache Angular dependencies
      #  uses: actions/cache@v4
      #  with:
      #    path: ./src/chrome-app/node_modules
      #    key: ${{ runner.os }}-node-${{ hashFiles('./src/chrome-app/package-lock.json') }}
      #    restore-keys: |
      #      ${{ runner.os }}-node-

      - name: Install Angular dependencies
        working-directory: ./src/chrome-app
        run: npm ci

      - name: Build Angular app
        working-directory: ./src/chrome-app
        run: npm run build

      - name: Install .NET Core
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 9.0.x

      # Execute all unit tests in the solution
      #- name: Execute unit tests
      #  run: dotnet test

      - name: Copy Angular build output to .NET publish folder
        working-directory: ./src/BrowserHost
        shell: pwsh
        run: |
          $chromeAppDist = "..\chrome-app\dist\chrome-app\browser"
          $targetDir = "chrome-app"
          if (Test-Path $targetDir) { Remove-Item $targetDir -Recurse -Force }
          Copy-Item $chromeAppDist $targetDir -Recurse

      - name: Build .NET application
        working-directory: ./src/BrowserHost
        run: dotnet publish BrowserHost.csproj -f net9.0-windows -r win-x64 -p:PublishSingleFile=true --self-contained true -o ../publish

      - name: Upload published artifacts
        uses: actions/upload-artifact@v4
        with:
          name: published-app
          path: ./src/publish

  release:
    if: startsWith(github.ref, 'refs/tags/v')
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: published-app
          path: ./published-app

      - name: Create GitHub Release
        id: create_release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Release Asset
        uses: softprops/action-gh-release@v2
        with:
          files: ./published-app/**
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
